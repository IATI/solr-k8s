apiVersion: solr.apache.org/v1beta1
kind: SolrCloud
metadata:
  name: iati-prod
spec:
  customSolrKubeOptions:
    ingressOptions:
      ingressClassName: nginx
    podOptions:
      nodeSelector:
        agentpool: solrnodepool
      annotations:
        manualrestart: "2021-12-13T10:17:00Z"
      resources:
        limits:
          memory: 9Gi
        requests:
          cpu: 700m
          memory: 9Gi
      initContainers:
        - name: set-zone
          image: roffe/kubectl
          command:
            - "/bin/sh"
            - "-c"
            - |
              zone=$(kubectl get node $NODE_NAME -o jsonpath='{.metadata.labels.topology\.kubernetes\.io/zone}')
              if [ "${zone}" != "" ]; then
                  echo "export SOLR_OPTS=\"\${SOLR_OPTS} -Davailability_zone=${zone}\"" > /docker-entrypoint-initdb.d/set-zone.sh
              fi
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: initdb
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - defaultContainerMount:
            mountPath: /docker-entrypoint-initdb.d
            name: initdb
          name: initdb
          source:
            emptyDir: {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: "technology"
                  operator: In
                  values:
                  - solr-cloud
                - key: "solr-cloud"
                  operator: In
                  values:
                  - iati-prod
              topologyKey: kubernetes.io/hostname
  dataStorage:
    persistent:
      pvcTemplate:
        spec:
          resources:
            requests:
              storage: 256Gi
      reclaimPolicy: Delete
  replicas: 3
  solrImage:
    repository: solr
    tag: 8.11.1
  solrJavaMem: -Xms3g -Xmx3g
  solrOpts: "-Dlog4j2.formatMsgNoLookups=true -Dsolr.cloud.client.stallTime=30000 -Dsolr.environment=prod"
  updateStrategy:
    managed:
      maxPodsUnavailable: 1
      maxShardReplicasUnavailable: 1
    method: Managed
    restartSchedule: "0 6 * * *"
  zookeeperRef:
    provided:
      chroot: /iatisolrprod
      image:
        pullPolicy: IfNotPresent
        repository: pravega/zookeeper
        tag: 0.2.12
      persistence:
        reclaimPolicy: Delete
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
      replicas: 3
      zookeeperPodPolicy:
        nodeSelector:
          agentpool: solrnodepool
        annotations:
          manualrestart: "2021-11-20T09:50:00Z"
        resources:
          limits:
            memory: 1Gi
          requests:
            cpu: 250m
            memory: 1Gi
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - key: "technology"
                    operator: In
                    values:
                    - zookeeper
                  - key: "solr-cloud"
                    operator: In
                    values:
                    - iati-prod
                topologyKey: kubernetes.io/hostname
  solrAddressability:
    commonServicePort: 443
    external:
      domainName: solr-new-prod.iatistandard.org
      method: Ingress
      nodePortOverride: 443
      useExternalAddress: false
    podPort: 8983
  solrTLS:
    restartOnTLSSecretUpdate: true
    pkcs12Secret:
      name: solr-tls
      key: keystore.p12
    keyStorePasswordSecret:
      name: pkcs12-password-secret-prod
      key: password-key
  solrSecurity:
    authenticationType: Basic
